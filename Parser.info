-----------------------------------------------------------------------------
Info file generated by Happy Version 1.18.4 from Parser.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parse -> PROGRAMA                           (0)
	PROGRAMA -> SECUENCIA_1                            (1)
	SECUENCIA_1 -> INSTR                               (2)
	SECUENCIA_1 -> CICLO                               (3)
	SECUENCIA_1 -> SECUENCIA_2 INSTR                   (4)
	SECUENCIA_1 -> SECUENCIA_2 CICLO                   (5)
	SECUENCIA_2 -> INSTR ';'                           (6)
	SECUENCIA_2 -> CICLO                               (7)
	SECUENCIA_2 -> SECUENCIA_2 INSTR ';'               (8)
	SECUENCIA_2 -> SECUENCIA_2 CICLO                   (9)
	INSTR -> identificador '(' identificador ')' '=' EM   (10)
	INSTR -> identificador '=' EM                      (11)
	INSTR -> "plot" EM ',' EM "with" '[' ']'           (12)
	INSTR -> "plot" EM ',' EM "with" '[' SECUENCIA_ESTILO ']'   (13)
	INSTR -> "plot" EM ',' EM "with" estilo            (14)
	INSTR -> "plot" EM ',' EM                          (15)
	INSTR -> "push_back" '(' identificador ',' EM ')'   (16)
	CICLO -> "for" identificador "in" EM SECUENCIA_1 "endfor"   (17)
	CICLO -> "for" identificador "in" EM "step" EM SECUENCIA_1 "endfor"   (18)
	EM -> EM '+' EM                                    (19)
	EM -> EM '-' EM                                    (20)
	EM -> EM '*' EM                                    (21)
	EM -> EM '/' EM                                    (22)
	EM -> EM '^' EM                                    (23)
	EM -> '-' EM                                       (24)
	EM -> '(' EM ')'                                   (25)
	EM -> int                                          (26)
	EM -> real                                         (27)
	EM -> funcion '(' EM ')'                           (28)
	EM -> identificador '(' EM ')'                     (29)
	EM -> identificador                                (30)
	EM -> '[' ']'                                      (31)
	EM -> '[' SECUENCIA_EM ']'                         (32)
	EM -> "range" '(' EM ',' EM ')'                    (33)
	EM -> '[' EM "for" identificador "in" EM ']'       (34)
	EM -> "if" '(' COND ',' EM ',' EM ')'              (35)
	SECUENCIA_EM -> EM                                 (36)
	SECUENCIA_EM -> SECUENCIA_EM ',' EM                (37)
	SECUENCIA_COND -> COND                             (38)
	SECUENCIA_COND -> SECUENCIA_COND ',' COND          (39)
	SECUENCIA_ESTILO -> estilo                         (40)
	SECUENCIA_ESTILO -> SECUENCIA_ESTILO ',' estilo    (41)
	COND -> COND '+' COND                              (42)
	COND -> COND '-' COND                              (43)
	COND -> COND '*' COND                              (44)
	COND -> COND '/' COND                              (45)
	COND -> COND '^' COND                              (46)
	COND -> '-' COND                                   (47)
	COND -> '(' COND ')'                               (48)
	COND -> int                                        (49)
	COND -> real                                       (50)
	COND -> funcion '(' COND ')'                       (51)
	COND -> identificador '(' COND ')'                 (52)
	COND -> identificador                              (53)
	COND -> '[' ']'                                    (54)
	COND -> '[' SECUENCIA_COND ']'                     (55)
	COND -> "range" '(' COND ',' COND ')'              (56)
	COND -> '[' COND "for" identificador "in" COND ']'   (57)
	COND -> "if" '(' COND ',' COND ',' COND ')'        (58)
	COND -> COND "AND" COND                            (59)
	COND -> COND "OR" COND                             (60)
	COND -> "NOT" COND                                 (61)
	COND -> COND '>' COND                              (62)
	COND -> COND '<' COND                              (63)
	COND -> COND "<=" COND                             (64)
	COND -> COND ">=" COND                             (65)
	COND -> COND "==" COND                             (66)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'+'            { ParserStatus TkMas _ _ }
	'-'            { ParserStatus TkMenos _ _ }
	'*'            { ParserStatus TkPor _ _ }
	'/'            { ParserStatus TkEntre  _ _ }
	'^'            { ParserStatus TkElevado _ _ }
	int            { ParserStatus (TkEntero $$) _ _ }
	real           { ParserStatus (TkReal $$) _ _ }
	funcion        { ParserStatus (TkFuncion $$) _ _ }
	'('            { ParserStatus TkParentesisI _ _ }
	')'            { ParserStatus TkParentesisD _ _ }
	'['            { ParserStatus TkCorcheteI _ _ }
	']'            { ParserStatus TkCorcheteD _ _ }
	','            { ParserStatus TkComa _ _ }
	"range"        { ParserStatus TkRango _ _ }
	"for"          { ParserStatus TkFor _ _ }
	"in"           { ParserStatus TkIn _ _ }
	"if"           { ParserStatus TkIf _ _ }
	"AND"          { ParserStatus TkAnd _ _ }
	"OR"           { ParserStatus TkOr _ _ }
	"NOT"          { ParserStatus TkNot _ _ }
	'<'            { ParserStatus TkMenor _ _ }
	'>'            { ParserStatus TkMayor _ _ }
	">="           { ParserStatus TkMayorIg _ _ }
	"<="           { ParserStatus TkMenorIg _ _ }
	"=="           { ParserStatus TkIgual _ _ }
	';'            { ParserStatus TkPuntoYComa _ _ }
	'='            { ParserStatus TkAsignacion _ _ }
	"with"         { ParserStatus TkWith _ _ }
	"plot"         { ParserStatus TkPlot _ _ }
	"endfor"       { ParserStatus TkEndFor _ _ }
	"step"         { ParserStatus TkStep _ _ }
	"push_back"    { ParserStatus TkPushBack _ _ }
	estilo         { ParserStatus (TkEstilo $$) _ _ }
	identificador  { ParserStatus (TkIdentificador $$) _ _ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parse    rule  0
	PROGRAMA        rule  1
	SECUENCIA_1     rules 2, 3, 4, 5
	SECUENCIA_2     rules 6, 7, 8, 9
	INSTR           rules 10, 11, 12, 13, 14, 15, 16
	CICLO           rules 17, 18
	EM              rules 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35
	SECUENCIA_EM    rules 36, 37
	SECUENCIA_COND  rules 38, 39
	SECUENCIA_ESTILO rules 40, 41
	COND            rules 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	"for"          shift, and enter state 6
	"plot"         shift, and enter state 7
	"push_back"    shift, and enter state 8
	identificador  shift, and enter state 9

	PROGRAMA       goto state 10
	SECUENCIA_1    goto state 2
	SECUENCIA_2    goto state 3
	INSTR          goto state 4
	CICLO          goto state 5

State 1


	"for"          shift, and enter state 6
	"plot"         shift, and enter state 7
	"push_back"    shift, and enter state 8
	identificador  shift, and enter state 9

	SECUENCIA_1    goto state 2
	SECUENCIA_2    goto state 3
	INSTR          goto state 4
	CICLO          goto state 5

State 2

	PROGRAMA -> SECUENCIA_1 .                           (rule 1)

	%eof           reduce using rule 1


State 3

	SECUENCIA_1 -> SECUENCIA_2 . INSTR                  (rule 4)
	SECUENCIA_1 -> SECUENCIA_2 . CICLO                  (rule 5)
	SECUENCIA_2 -> SECUENCIA_2 . INSTR ';'              (rule 8)
	SECUENCIA_2 -> SECUENCIA_2 . CICLO                  (rule 9)

	"for"          shift, and enter state 6
	"plot"         shift, and enter state 7
	"push_back"    shift, and enter state 8
	identificador  shift, and enter state 9

	INSTR          goto state 26
	CICLO          goto state 27

State 4

	SECUENCIA_1 -> INSTR .                              (rule 2)
	SECUENCIA_2 -> INSTR . ';'                          (rule 6)

	';'            shift, and enter state 25
	"endfor"       reduce using rule 2
	%eof           reduce using rule 2


State 5

	SECUENCIA_1 -> CICLO .                              (rule 3)
	SECUENCIA_2 -> CICLO .                              (rule 7)

	"for"          reduce using rule 7
	"plot"         reduce using rule 7
	"endfor"       reduce using rule 3
	"push_back"    reduce using rule 7
	identificador  reduce using rule 7
	%eof           reduce using rule 3


State 6

	CICLO -> "for" . identificador "in" EM SECUENCIA_1 "endfor"    (rule 17)
	CICLO -> "for" . identificador "in" EM "step" EM SECUENCIA_1 "endfor"    (rule 18)

	identificador  shift, and enter state 24


State 7

	INSTR -> "plot" . EM ',' EM "with" '[' ']'          (rule 12)
	INSTR -> "plot" . EM ',' EM "with" '[' SECUENCIA_ESTILO ']'    (rule 13)
	INSTR -> "plot" . EM ',' EM "with" estilo           (rule 14)
	INSTR -> "plot" . EM ',' EM                         (rule 15)

	'-'            shift, and enter state 15
	int            shift, and enter state 16
	real           shift, and enter state 17
	funcion        shift, and enter state 18
	'('            shift, and enter state 19
	'['            shift, and enter state 20
	"range"        shift, and enter state 21
	"if"           shift, and enter state 22
	identificador  shift, and enter state 23

	EM             goto state 14

State 8

	INSTR -> "push_back" . '(' identificador ',' EM ')'    (rule 16)

	'('            shift, and enter state 13


State 9

	INSTR -> identificador . '(' identificador ')' '=' EM    (rule 10)
	INSTR -> identificador . '=' EM                     (rule 11)

	'('            shift, and enter state 11
	'='            shift, and enter state 12


State 10

	%start_parse -> PROGRAMA .                          (rule 0)

	%eof           accept


State 11

	INSTR -> identificador '(' . identificador ')' '=' EM    (rule 10)

	identificador  shift, and enter state 47


State 12

	INSTR -> identificador '=' . EM                     (rule 11)

	'-'            shift, and enter state 15
	int            shift, and enter state 16
	real           shift, and enter state 17
	funcion        shift, and enter state 18
	'('            shift, and enter state 19
	'['            shift, and enter state 20
	"range"        shift, and enter state 21
	"if"           shift, and enter state 22
	identificador  shift, and enter state 23

	EM             goto state 46

State 13

	INSTR -> "push_back" '(' . identificador ',' EM ')'    (rule 16)

	identificador  shift, and enter state 45


State 14

	INSTR -> "plot" EM . ',' EM "with" '[' ']'          (rule 12)
	INSTR -> "plot" EM . ',' EM "with" '[' SECUENCIA_ESTILO ']'    (rule 13)
	INSTR -> "plot" EM . ',' EM "with" estilo           (rule 14)
	INSTR -> "plot" EM . ',' EM                         (rule 15)
	EM -> EM . '+' EM                                   (rule 19)
	EM -> EM . '-' EM                                   (rule 20)
	EM -> EM . '*' EM                                   (rule 21)
	EM -> EM . '/' EM                                   (rule 22)
	EM -> EM . '^' EM                                   (rule 23)

	'+'            shift, and enter state 39
	'-'            shift, and enter state 40
	'*'            shift, and enter state 41
	'/'            shift, and enter state 42
	'^'            shift, and enter state 43
	','            shift, and enter state 44


State 15

	EM -> '-' . EM                                      (rule 24)

	'-'            shift, and enter state 15
	int            shift, and enter state 16
	real           shift, and enter state 17
	funcion        shift, and enter state 18
	'('            shift, and enter state 19
	'['            shift, and enter state 20
	"range"        shift, and enter state 21
	"if"           shift, and enter state 22
	identificador  shift, and enter state 23

	EM             goto state 38

State 16

	EM -> int .                                         (rule 26)

	'+'            reduce using rule 26
	'-'            reduce using rule 26
	'*'            reduce using rule 26
	'/'            reduce using rule 26
	'^'            reduce using rule 26
	')'            reduce using rule 26
	']'            reduce using rule 26
	','            reduce using rule 26
	"for"          reduce using rule 26
	';'            reduce using rule 26
	"with"         reduce using rule 26
	"plot"         reduce using rule 26
	"endfor"       reduce using rule 26
	"step"         reduce using rule 26
	"push_back"    reduce using rule 26
	identificador  reduce using rule 26
	%eof           reduce using rule 26


State 17

	EM -> real .                                        (rule 27)

	'+'            reduce using rule 27
	'-'            reduce using rule 27
	'*'            reduce using rule 27
	'/'            reduce using rule 27
	'^'            reduce using rule 27
	')'            reduce using rule 27
	']'            reduce using rule 27
	','            reduce using rule 27
	"for"          reduce using rule 27
	';'            reduce using rule 27
	"with"         reduce using rule 27
	"plot"         reduce using rule 27
	"endfor"       reduce using rule 27
	"step"         reduce using rule 27
	"push_back"    reduce using rule 27
	identificador  reduce using rule 27
	%eof           reduce using rule 27


State 18

	EM -> funcion . '(' EM ')'                          (rule 28)

	'('            shift, and enter state 37


State 19

	EM -> '(' . EM ')'                                  (rule 25)

	'-'            shift, and enter state 15
	int            shift, and enter state 16
	real           shift, and enter state 17
	funcion        shift, and enter state 18
	'('            shift, and enter state 19
	'['            shift, and enter state 20
	"range"        shift, and enter state 21
	"if"           shift, and enter state 22
	identificador  shift, and enter state 23

	EM             goto state 36

State 20

	EM -> '[' . ']'                                     (rule 31)
	EM -> '[' . SECUENCIA_EM ']'                        (rule 32)
	EM -> '[' . EM "for" identificador "in" EM ']'      (rule 34)

	'-'            shift, and enter state 15
	int            shift, and enter state 16
	real           shift, and enter state 17
	funcion        shift, and enter state 18
	'('            shift, and enter state 19
	'['            shift, and enter state 20
	']'            shift, and enter state 35
	"range"        shift, and enter state 21
	"if"           shift, and enter state 22
	identificador  shift, and enter state 23

	EM             goto state 33
	SECUENCIA_EM   goto state 34

State 21

	EM -> "range" . '(' EM ',' EM ')'                   (rule 33)

	'('            shift, and enter state 32


State 22

	EM -> "if" . '(' COND ',' EM ',' EM ')'             (rule 35)

	'('            shift, and enter state 31


State 23

	EM -> identificador . '(' EM ')'                    (rule 29)
	EM -> identificador .                               (rule 30)

	'+'            reduce using rule 30
	'-'            reduce using rule 30
	'*'            reduce using rule 30
	'/'            reduce using rule 30
	'^'            reduce using rule 30
	'('            shift, and enter state 30
	')'            reduce using rule 30
	']'            reduce using rule 30
	','            reduce using rule 30
	"for"          reduce using rule 30
	';'            reduce using rule 30
	"with"         reduce using rule 30
	"plot"         reduce using rule 30
	"endfor"       reduce using rule 30
	"step"         reduce using rule 30
	"push_back"    reduce using rule 30
	identificador  reduce using rule 30
	%eof           reduce using rule 30


State 24

	CICLO -> "for" identificador . "in" EM SECUENCIA_1 "endfor"    (rule 17)
	CICLO -> "for" identificador . "in" EM "step" EM SECUENCIA_1 "endfor"    (rule 18)

	"in"           shift, and enter state 29


State 25

	SECUENCIA_2 -> INSTR ';' .                          (rule 6)

	"for"          reduce using rule 6
	"plot"         reduce using rule 6
	"push_back"    reduce using rule 6
	identificador  reduce using rule 6


State 26

	SECUENCIA_1 -> SECUENCIA_2 INSTR .                  (rule 4)
	SECUENCIA_2 -> SECUENCIA_2 INSTR . ';'              (rule 8)

	';'            shift, and enter state 28
	"endfor"       reduce using rule 4
	%eof           reduce using rule 4


State 27

	SECUENCIA_1 -> SECUENCIA_2 CICLO .                  (rule 5)
	SECUENCIA_2 -> SECUENCIA_2 CICLO .                  (rule 9)

	"for"          reduce using rule 9
	"plot"         reduce using rule 9
	"endfor"       reduce using rule 5
	"push_back"    reduce using rule 9
	identificador  reduce using rule 9
	%eof           reduce using rule 5


State 28

	SECUENCIA_2 -> SECUENCIA_2 INSTR ';' .              (rule 8)

	"for"          reduce using rule 8
	"plot"         reduce using rule 8
	"push_back"    reduce using rule 8
	identificador  reduce using rule 8


State 29

	CICLO -> "for" identificador "in" . EM SECUENCIA_1 "endfor"    (rule 17)
	CICLO -> "for" identificador "in" . EM "step" EM SECUENCIA_1 "endfor"    (rule 18)

	'-'            shift, and enter state 15
	int            shift, and enter state 16
	real           shift, and enter state 17
	funcion        shift, and enter state 18
	'('            shift, and enter state 19
	'['            shift, and enter state 20
	"range"        shift, and enter state 21
	"if"           shift, and enter state 22
	identificador  shift, and enter state 23

	EM             goto state 74

State 30

	EM -> identificador '(' . EM ')'                    (rule 29)

	'-'            shift, and enter state 15
	int            shift, and enter state 16
	real           shift, and enter state 17
	funcion        shift, and enter state 18
	'('            shift, and enter state 19
	'['            shift, and enter state 20
	"range"        shift, and enter state 21
	"if"           shift, and enter state 22
	identificador  shift, and enter state 23

	EM             goto state 73

State 31

	EM -> "if" '(' . COND ',' EM ',' EM ')'             (rule 35)

	'-'            shift, and enter state 63
	int            shift, and enter state 64
	real           shift, and enter state 65
	funcion        shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	"range"        shift, and enter state 69
	"if"           shift, and enter state 70
	"NOT"          shift, and enter state 71
	identificador  shift, and enter state 72

	COND           goto state 62

State 32

	EM -> "range" '(' . EM ',' EM ')'                   (rule 33)

	'-'            shift, and enter state 15
	int            shift, and enter state 16
	real           shift, and enter state 17
	funcion        shift, and enter state 18
	'('            shift, and enter state 19
	'['            shift, and enter state 20
	"range"        shift, and enter state 21
	"if"           shift, and enter state 22
	identificador  shift, and enter state 23

	EM             goto state 61

State 33

	EM -> EM . '+' EM                                   (rule 19)
	EM -> EM . '-' EM                                   (rule 20)
	EM -> EM . '*' EM                                   (rule 21)
	EM -> EM . '/' EM                                   (rule 22)
	EM -> EM . '^' EM                                   (rule 23)
	EM -> '[' EM . "for" identificador "in" EM ']'      (rule 34)
	SECUENCIA_EM -> EM .                                (rule 36)

	'+'            shift, and enter state 39
	'-'            shift, and enter state 40
	'*'            shift, and enter state 41
	'/'            shift, and enter state 42
	'^'            shift, and enter state 43
	']'            reduce using rule 36
	','            reduce using rule 36
	"for"          shift, and enter state 60


State 34

	EM -> '[' SECUENCIA_EM . ']'                        (rule 32)
	SECUENCIA_EM -> SECUENCIA_EM . ',' EM               (rule 37)

	']'            shift, and enter state 58
	','            shift, and enter state 59


State 35

	EM -> '[' ']' .                                     (rule 31)

	'+'            reduce using rule 31
	'-'            reduce using rule 31
	'*'            reduce using rule 31
	'/'            reduce using rule 31
	'^'            reduce using rule 31
	')'            reduce using rule 31
	']'            reduce using rule 31
	','            reduce using rule 31
	"for"          reduce using rule 31
	';'            reduce using rule 31
	"with"         reduce using rule 31
	"plot"         reduce using rule 31
	"endfor"       reduce using rule 31
	"step"         reduce using rule 31
	"push_back"    reduce using rule 31
	identificador  reduce using rule 31
	%eof           reduce using rule 31


State 36

	EM -> EM . '+' EM                                   (rule 19)
	EM -> EM . '-' EM                                   (rule 20)
	EM -> EM . '*' EM                                   (rule 21)
	EM -> EM . '/' EM                                   (rule 22)
	EM -> EM . '^' EM                                   (rule 23)
	EM -> '(' EM . ')'                                  (rule 25)

	'+'            shift, and enter state 39
	'-'            shift, and enter state 40
	'*'            shift, and enter state 41
	'/'            shift, and enter state 42
	'^'            shift, and enter state 43
	')'            shift, and enter state 57


State 37

	EM -> funcion '(' . EM ')'                          (rule 28)

	'-'            shift, and enter state 15
	int            shift, and enter state 16
	real           shift, and enter state 17
	funcion        shift, and enter state 18
	'('            shift, and enter state 19
	'['            shift, and enter state 20
	"range"        shift, and enter state 21
	"if"           shift, and enter state 22
	identificador  shift, and enter state 23

	EM             goto state 56

State 38

	EM -> EM . '+' EM                                   (rule 19)
	EM -> EM . '-' EM                                   (rule 20)
	EM -> EM . '*' EM                                   (rule 21)
	EM -> EM . '/' EM                                   (rule 22)
	EM -> EM . '^' EM                                   (rule 23)
	EM -> '-' EM .                                      (rule 24)

	'+'            reduce using rule 24
	'-'            reduce using rule 24
	'*'            reduce using rule 24
	'/'            reduce using rule 24
	'^'            shift, and enter state 43
	')'            reduce using rule 24
	']'            reduce using rule 24
	','            reduce using rule 24
	"for"          reduce using rule 24
	';'            reduce using rule 24
	"with"         reduce using rule 24
	"plot"         reduce using rule 24
	"endfor"       reduce using rule 24
	"step"         reduce using rule 24
	"push_back"    reduce using rule 24
	identificador  reduce using rule 24
	%eof           reduce using rule 24


State 39

	EM -> EM '+' . EM                                   (rule 19)

	'-'            shift, and enter state 15
	int            shift, and enter state 16
	real           shift, and enter state 17
	funcion        shift, and enter state 18
	'('            shift, and enter state 19
	'['            shift, and enter state 20
	"range"        shift, and enter state 21
	"if"           shift, and enter state 22
	identificador  shift, and enter state 23

	EM             goto state 55

State 40

	EM -> EM '-' . EM                                   (rule 20)

	'-'            shift, and enter state 15
	int            shift, and enter state 16
	real           shift, and enter state 17
	funcion        shift, and enter state 18
	'('            shift, and enter state 19
	'['            shift, and enter state 20
	"range"        shift, and enter state 21
	"if"           shift, and enter state 22
	identificador  shift, and enter state 23

	EM             goto state 54

State 41

	EM -> EM '*' . EM                                   (rule 21)

	'-'            shift, and enter state 15
	int            shift, and enter state 16
	real           shift, and enter state 17
	funcion        shift, and enter state 18
	'('            shift, and enter state 19
	'['            shift, and enter state 20
	"range"        shift, and enter state 21
	"if"           shift, and enter state 22
	identificador  shift, and enter state 23

	EM             goto state 53

State 42

	EM -> EM '/' . EM                                   (rule 22)

	'-'            shift, and enter state 15
	int            shift, and enter state 16
	real           shift, and enter state 17
	funcion        shift, and enter state 18
	'('            shift, and enter state 19
	'['            shift, and enter state 20
	"range"        shift, and enter state 21
	"if"           shift, and enter state 22
	identificador  shift, and enter state 23

	EM             goto state 52

State 43

	EM -> EM '^' . EM                                   (rule 23)

	'-'            shift, and enter state 15
	int            shift, and enter state 16
	real           shift, and enter state 17
	funcion        shift, and enter state 18
	'('            shift, and enter state 19
	'['            shift, and enter state 20
	"range"        shift, and enter state 21
	"if"           shift, and enter state 22
	identificador  shift, and enter state 23

	EM             goto state 51

State 44

	INSTR -> "plot" EM ',' . EM "with" '[' ']'          (rule 12)
	INSTR -> "plot" EM ',' . EM "with" '[' SECUENCIA_ESTILO ']'    (rule 13)
	INSTR -> "plot" EM ',' . EM "with" estilo           (rule 14)
	INSTR -> "plot" EM ',' . EM                         (rule 15)

	'-'            shift, and enter state 15
	int            shift, and enter state 16
	real           shift, and enter state 17
	funcion        shift, and enter state 18
	'('            shift, and enter state 19
	'['            shift, and enter state 20
	"range"        shift, and enter state 21
	"if"           shift, and enter state 22
	identificador  shift, and enter state 23

	EM             goto state 50

State 45

	INSTR -> "push_back" '(' identificador . ',' EM ')'    (rule 16)

	','            shift, and enter state 49


State 46

	INSTR -> identificador '=' EM .                     (rule 11)
	EM -> EM . '+' EM                                   (rule 19)
	EM -> EM . '-' EM                                   (rule 20)
	EM -> EM . '*' EM                                   (rule 21)
	EM -> EM . '/' EM                                   (rule 22)
	EM -> EM . '^' EM                                   (rule 23)

	'+'            shift, and enter state 39
	'-'            shift, and enter state 40
	'*'            shift, and enter state 41
	'/'            shift, and enter state 42
	'^'            shift, and enter state 43
	';'            reduce using rule 11
	"endfor"       reduce using rule 11
	%eof           reduce using rule 11


State 47

	INSTR -> identificador '(' identificador . ')' '=' EM    (rule 10)

	')'            shift, and enter state 48


State 48

	INSTR -> identificador '(' identificador ')' . '=' EM    (rule 10)

	'='            shift, and enter state 107


State 49

	INSTR -> "push_back" '(' identificador ',' . EM ')'    (rule 16)

	'-'            shift, and enter state 15
	int            shift, and enter state 16
	real           shift, and enter state 17
	funcion        shift, and enter state 18
	'('            shift, and enter state 19
	'['            shift, and enter state 20
	"range"        shift, and enter state 21
	"if"           shift, and enter state 22
	identificador  shift, and enter state 23

	EM             goto state 106

State 50

	INSTR -> "plot" EM ',' EM . "with" '[' ']'          (rule 12)
	INSTR -> "plot" EM ',' EM . "with" '[' SECUENCIA_ESTILO ']'    (rule 13)
	INSTR -> "plot" EM ',' EM . "with" estilo           (rule 14)
	INSTR -> "plot" EM ',' EM .                         (rule 15)
	EM -> EM . '+' EM                                   (rule 19)
	EM -> EM . '-' EM                                   (rule 20)
	EM -> EM . '*' EM                                   (rule 21)
	EM -> EM . '/' EM                                   (rule 22)
	EM -> EM . '^' EM                                   (rule 23)

	'+'            shift, and enter state 39
	'-'            shift, and enter state 40
	'*'            shift, and enter state 41
	'/'            shift, and enter state 42
	'^'            shift, and enter state 43
	';'            reduce using rule 15
	"with"         shift, and enter state 105
	"endfor"       reduce using rule 15
	%eof           reduce using rule 15


State 51

	EM -> EM . '+' EM                                   (rule 19)
	EM -> EM . '-' EM                                   (rule 20)
	EM -> EM . '*' EM                                   (rule 21)
	EM -> EM . '/' EM                                   (rule 22)
	EM -> EM . '^' EM                                   (rule 23)
	EM -> EM '^' EM .                                   (rule 23)

	'+'            reduce using rule 23
	'-'            reduce using rule 23
	'*'            reduce using rule 23
	'/'            reduce using rule 23
	'^'            shift, and enter state 43
	')'            reduce using rule 23
	']'            reduce using rule 23
	','            reduce using rule 23
	"for"          reduce using rule 23
	';'            reduce using rule 23
	"with"         reduce using rule 23
	"plot"         reduce using rule 23
	"endfor"       reduce using rule 23
	"step"         reduce using rule 23
	"push_back"    reduce using rule 23
	identificador  reduce using rule 23
	%eof           reduce using rule 23


State 52

	EM -> EM . '+' EM                                   (rule 19)
	EM -> EM . '-' EM                                   (rule 20)
	EM -> EM . '*' EM                                   (rule 21)
	EM -> EM . '/' EM                                   (rule 22)
	EM -> EM '/' EM .                                   (rule 22)
	EM -> EM . '^' EM                                   (rule 23)

	'+'            reduce using rule 22
	'-'            reduce using rule 22
	'*'            reduce using rule 22
	'/'            reduce using rule 22
	'^'            shift, and enter state 43
	')'            reduce using rule 22
	']'            reduce using rule 22
	','            reduce using rule 22
	"for"          reduce using rule 22
	';'            reduce using rule 22
	"with"         reduce using rule 22
	"plot"         reduce using rule 22
	"endfor"       reduce using rule 22
	"step"         reduce using rule 22
	"push_back"    reduce using rule 22
	identificador  reduce using rule 22
	%eof           reduce using rule 22


State 53

	EM -> EM . '+' EM                                   (rule 19)
	EM -> EM . '-' EM                                   (rule 20)
	EM -> EM . '*' EM                                   (rule 21)
	EM -> EM '*' EM .                                   (rule 21)
	EM -> EM . '/' EM                                   (rule 22)
	EM -> EM . '^' EM                                   (rule 23)

	'+'            reduce using rule 21
	'-'            reduce using rule 21
	'*'            reduce using rule 21
	'/'            reduce using rule 21
	'^'            shift, and enter state 43
	')'            reduce using rule 21
	']'            reduce using rule 21
	','            reduce using rule 21
	"for"          reduce using rule 21
	';'            reduce using rule 21
	"with"         reduce using rule 21
	"plot"         reduce using rule 21
	"endfor"       reduce using rule 21
	"step"         reduce using rule 21
	"push_back"    reduce using rule 21
	identificador  reduce using rule 21
	%eof           reduce using rule 21


State 54

	EM -> EM . '+' EM                                   (rule 19)
	EM -> EM . '-' EM                                   (rule 20)
	EM -> EM '-' EM .                                   (rule 20)
	EM -> EM . '*' EM                                   (rule 21)
	EM -> EM . '/' EM                                   (rule 22)
	EM -> EM . '^' EM                                   (rule 23)

	'+'            reduce using rule 20
	'-'            reduce using rule 20
	'*'            shift, and enter state 41
	'/'            shift, and enter state 42
	'^'            shift, and enter state 43
	')'            reduce using rule 20
	']'            reduce using rule 20
	','            reduce using rule 20
	"for"          reduce using rule 20
	';'            reduce using rule 20
	"with"         reduce using rule 20
	"plot"         reduce using rule 20
	"endfor"       reduce using rule 20
	"step"         reduce using rule 20
	"push_back"    reduce using rule 20
	identificador  reduce using rule 20
	%eof           reduce using rule 20


State 55

	EM -> EM . '+' EM                                   (rule 19)
	EM -> EM '+' EM .                                   (rule 19)
	EM -> EM . '-' EM                                   (rule 20)
	EM -> EM . '*' EM                                   (rule 21)
	EM -> EM . '/' EM                                   (rule 22)
	EM -> EM . '^' EM                                   (rule 23)

	'+'            reduce using rule 19
	'-'            reduce using rule 19
	'*'            shift, and enter state 41
	'/'            shift, and enter state 42
	'^'            shift, and enter state 43
	')'            reduce using rule 19
	']'            reduce using rule 19
	','            reduce using rule 19
	"for"          reduce using rule 19
	';'            reduce using rule 19
	"with"         reduce using rule 19
	"plot"         reduce using rule 19
	"endfor"       reduce using rule 19
	"step"         reduce using rule 19
	"push_back"    reduce using rule 19
	identificador  reduce using rule 19
	%eof           reduce using rule 19


State 56

	EM -> EM . '+' EM                                   (rule 19)
	EM -> EM . '-' EM                                   (rule 20)
	EM -> EM . '*' EM                                   (rule 21)
	EM -> EM . '/' EM                                   (rule 22)
	EM -> EM . '^' EM                                   (rule 23)
	EM -> funcion '(' EM . ')'                          (rule 28)

	'+'            shift, and enter state 39
	'-'            shift, and enter state 40
	'*'            shift, and enter state 41
	'/'            shift, and enter state 42
	'^'            shift, and enter state 43
	')'            shift, and enter state 104


State 57

	EM -> '(' EM ')' .                                  (rule 25)

	'+'            reduce using rule 25
	'-'            reduce using rule 25
	'*'            reduce using rule 25
	'/'            reduce using rule 25
	'^'            reduce using rule 25
	')'            reduce using rule 25
	']'            reduce using rule 25
	','            reduce using rule 25
	"for"          reduce using rule 25
	';'            reduce using rule 25
	"with"         reduce using rule 25
	"plot"         reduce using rule 25
	"endfor"       reduce using rule 25
	"step"         reduce using rule 25
	"push_back"    reduce using rule 25
	identificador  reduce using rule 25
	%eof           reduce using rule 25


State 58

	EM -> '[' SECUENCIA_EM ']' .                        (rule 32)

	'+'            reduce using rule 32
	'-'            reduce using rule 32
	'*'            reduce using rule 32
	'/'            reduce using rule 32
	'^'            reduce using rule 32
	')'            reduce using rule 32
	']'            reduce using rule 32
	','            reduce using rule 32
	"for"          reduce using rule 32
	';'            reduce using rule 32
	"with"         reduce using rule 32
	"plot"         reduce using rule 32
	"endfor"       reduce using rule 32
	"step"         reduce using rule 32
	"push_back"    reduce using rule 32
	identificador  reduce using rule 32
	%eof           reduce using rule 32


State 59

	SECUENCIA_EM -> SECUENCIA_EM ',' . EM               (rule 37)

	'-'            shift, and enter state 15
	int            shift, and enter state 16
	real           shift, and enter state 17
	funcion        shift, and enter state 18
	'('            shift, and enter state 19
	'['            shift, and enter state 20
	"range"        shift, and enter state 21
	"if"           shift, and enter state 22
	identificador  shift, and enter state 23

	EM             goto state 103

State 60

	EM -> '[' EM "for" . identificador "in" EM ']'      (rule 34)

	identificador  shift, and enter state 102


State 61

	EM -> EM . '+' EM                                   (rule 19)
	EM -> EM . '-' EM                                   (rule 20)
	EM -> EM . '*' EM                                   (rule 21)
	EM -> EM . '/' EM                                   (rule 22)
	EM -> EM . '^' EM                                   (rule 23)
	EM -> "range" '(' EM . ',' EM ')'                   (rule 33)

	'+'            shift, and enter state 39
	'-'            shift, and enter state 40
	'*'            shift, and enter state 41
	'/'            shift, and enter state 42
	'^'            shift, and enter state 43
	','            shift, and enter state 101


State 62

	EM -> "if" '(' COND . ',' EM ',' EM ')'             (rule 35)
	COND -> COND . '+' COND                             (rule 42)
	COND -> COND . '-' COND                             (rule 43)
	COND -> COND . '*' COND                             (rule 44)
	COND -> COND . '/' COND                             (rule 45)
	COND -> COND . '^' COND                             (rule 46)
	COND -> COND . "AND" COND                           (rule 59)
	COND -> COND . "OR" COND                            (rule 60)
	COND -> COND . '>' COND                             (rule 62)
	COND -> COND . '<' COND                             (rule 63)
	COND -> COND . "<=" COND                            (rule 64)
	COND -> COND . ">=" COND                            (rule 65)
	COND -> COND . "==" COND                            (rule 66)

	'+'            shift, and enter state 88
	'-'            shift, and enter state 89
	'*'            shift, and enter state 90
	'/'            shift, and enter state 91
	'^'            shift, and enter state 92
	','            shift, and enter state 93
	"AND"          shift, and enter state 94
	"OR"           shift, and enter state 95
	'<'            shift, and enter state 96
	'>'            shift, and enter state 97
	">="           shift, and enter state 98
	"<="           shift, and enter state 99
	"=="           shift, and enter state 100


State 63

	COND -> '-' . COND                                  (rule 47)

	'-'            shift, and enter state 63
	int            shift, and enter state 64
	real           shift, and enter state 65
	funcion        shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	"range"        shift, and enter state 69
	"if"           shift, and enter state 70
	"NOT"          shift, and enter state 71
	identificador  shift, and enter state 72

	COND           goto state 87

State 64

	COND -> int .                                       (rule 49)

	'+'            reduce using rule 49
	'-'            reduce using rule 49
	'*'            reduce using rule 49
	'/'            reduce using rule 49
	'^'            reduce using rule 49
	')'            reduce using rule 49
	']'            reduce using rule 49
	','            reduce using rule 49
	"for"          reduce using rule 49
	"AND"          reduce using rule 49
	"OR"           reduce using rule 49
	'<'            reduce using rule 49
	'>'            reduce using rule 49
	">="           reduce using rule 49
	"<="           reduce using rule 49
	"=="           reduce using rule 49


State 65

	COND -> real .                                      (rule 50)

	'+'            reduce using rule 50
	'-'            reduce using rule 50
	'*'            reduce using rule 50
	'/'            reduce using rule 50
	'^'            reduce using rule 50
	')'            reduce using rule 50
	']'            reduce using rule 50
	','            reduce using rule 50
	"for"          reduce using rule 50
	"AND"          reduce using rule 50
	"OR"           reduce using rule 50
	'<'            reduce using rule 50
	'>'            reduce using rule 50
	">="           reduce using rule 50
	"<="           reduce using rule 50
	"=="           reduce using rule 50


State 66

	COND -> funcion . '(' COND ')'                      (rule 51)

	'('            shift, and enter state 86


State 67

	COND -> '(' . COND ')'                              (rule 48)

	'-'            shift, and enter state 63
	int            shift, and enter state 64
	real           shift, and enter state 65
	funcion        shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	"range"        shift, and enter state 69
	"if"           shift, and enter state 70
	"NOT"          shift, and enter state 71
	identificador  shift, and enter state 72

	COND           goto state 85

State 68

	COND -> '[' . ']'                                   (rule 54)
	COND -> '[' . SECUENCIA_COND ']'                    (rule 55)
	COND -> '[' . COND "for" identificador "in" COND ']'    (rule 57)

	'-'            shift, and enter state 63
	int            shift, and enter state 64
	real           shift, and enter state 65
	funcion        shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	']'            shift, and enter state 84
	"range"        shift, and enter state 69
	"if"           shift, and enter state 70
	"NOT"          shift, and enter state 71
	identificador  shift, and enter state 72

	SECUENCIA_COND goto state 82
	COND           goto state 83

State 69

	COND -> "range" . '(' COND ',' COND ')'             (rule 56)

	'('            shift, and enter state 81


State 70

	COND -> "if" . '(' COND ',' COND ',' COND ')'       (rule 58)

	'('            shift, and enter state 80


State 71

	COND -> "NOT" . COND                                (rule 61)

	'-'            shift, and enter state 63
	int            shift, and enter state 64
	real           shift, and enter state 65
	funcion        shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	"range"        shift, and enter state 69
	"if"           shift, and enter state 70
	"NOT"          shift, and enter state 71
	identificador  shift, and enter state 72

	COND           goto state 79

State 72

	COND -> identificador . '(' COND ')'                (rule 52)
	COND -> identificador .                             (rule 53)

	'+'            reduce using rule 53
	'-'            reduce using rule 53
	'*'            reduce using rule 53
	'/'            reduce using rule 53
	'^'            reduce using rule 53
	'('            shift, and enter state 78
	')'            reduce using rule 53
	']'            reduce using rule 53
	','            reduce using rule 53
	"for"          reduce using rule 53
	"AND"          reduce using rule 53
	"OR"           reduce using rule 53
	'<'            reduce using rule 53
	'>'            reduce using rule 53
	">="           reduce using rule 53
	"<="           reduce using rule 53
	"=="           reduce using rule 53


State 73

	EM -> EM . '+' EM                                   (rule 19)
	EM -> EM . '-' EM                                   (rule 20)
	EM -> EM . '*' EM                                   (rule 21)
	EM -> EM . '/' EM                                   (rule 22)
	EM -> EM . '^' EM                                   (rule 23)
	EM -> identificador '(' EM . ')'                    (rule 29)

	'+'            shift, and enter state 39
	'-'            shift, and enter state 40
	'*'            shift, and enter state 41
	'/'            shift, and enter state 42
	'^'            shift, and enter state 43
	')'            shift, and enter state 77


State 74

	CICLO -> "for" identificador "in" EM . SECUENCIA_1 "endfor"    (rule 17)
	CICLO -> "for" identificador "in" EM . "step" EM SECUENCIA_1 "endfor"    (rule 18)
	EM -> EM . '+' EM                                   (rule 19)
	EM -> EM . '-' EM                                   (rule 20)
	EM -> EM . '*' EM                                   (rule 21)
	EM -> EM . '/' EM                                   (rule 22)
	EM -> EM . '^' EM                                   (rule 23)

	'+'            shift, and enter state 39
	'-'            shift, and enter state 40
	'*'            shift, and enter state 41
	'/'            shift, and enter state 42
	'^'            shift, and enter state 43
	"for"          shift, and enter state 6
	"plot"         shift, and enter state 7
	"step"         shift, and enter state 76
	"push_back"    shift, and enter state 8
	identificador  shift, and enter state 9

	SECUENCIA_1    goto state 75
	SECUENCIA_2    goto state 3
	INSTR          goto state 4
	CICLO          goto state 5

State 75

	CICLO -> "for" identificador "in" EM SECUENCIA_1 . "endfor"    (rule 17)

	"endfor"       shift, and enter state 136


State 76

	CICLO -> "for" identificador "in" EM "step" . EM SECUENCIA_1 "endfor"    (rule 18)

	'-'            shift, and enter state 15
	int            shift, and enter state 16
	real           shift, and enter state 17
	funcion        shift, and enter state 18
	'('            shift, and enter state 19
	'['            shift, and enter state 20
	"range"        shift, and enter state 21
	"if"           shift, and enter state 22
	identificador  shift, and enter state 23

	EM             goto state 135

State 77

	EM -> identificador '(' EM ')' .                    (rule 29)

	'+'            reduce using rule 29
	'-'            reduce using rule 29
	'*'            reduce using rule 29
	'/'            reduce using rule 29
	'^'            reduce using rule 29
	')'            reduce using rule 29
	']'            reduce using rule 29
	','            reduce using rule 29
	"for"          reduce using rule 29
	';'            reduce using rule 29
	"with"         reduce using rule 29
	"plot"         reduce using rule 29
	"endfor"       reduce using rule 29
	"step"         reduce using rule 29
	"push_back"    reduce using rule 29
	identificador  reduce using rule 29
	%eof           reduce using rule 29


State 78

	COND -> identificador '(' . COND ')'                (rule 52)

	'-'            shift, and enter state 63
	int            shift, and enter state 64
	real           shift, and enter state 65
	funcion        shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	"range"        shift, and enter state 69
	"if"           shift, and enter state 70
	"NOT"          shift, and enter state 71
	identificador  shift, and enter state 72

	COND           goto state 134

State 79

	COND -> COND . '+' COND                             (rule 42)
	COND -> COND . '-' COND                             (rule 43)
	COND -> COND . '*' COND                             (rule 44)
	COND -> COND . '/' COND                             (rule 45)
	COND -> COND . '^' COND                             (rule 46)
	COND -> COND . "AND" COND                           (rule 59)
	COND -> COND . "OR" COND                            (rule 60)
	COND -> "NOT" COND .                                (rule 61)
	COND -> COND . '>' COND                             (rule 62)
	COND -> COND . '<' COND                             (rule 63)
	COND -> COND . "<=" COND                            (rule 64)
	COND -> COND . ">=" COND                            (rule 65)
	COND -> COND . "==" COND                            (rule 66)

	'+'            shift, and enter state 88
	'-'            shift, and enter state 89
	'*'            shift, and enter state 90
	'/'            shift, and enter state 91
	'^'            shift, and enter state 92
	')'            reduce using rule 61
	']'            reduce using rule 61
	','            reduce using rule 61
	"for"          reduce using rule 61
	"AND"          reduce using rule 61
	"OR"           reduce using rule 61
	'<'            shift, and enter state 96
	'>'            shift, and enter state 97
	">="           shift, and enter state 98
	"<="           shift, and enter state 99
	"=="           shift, and enter state 100


State 80

	COND -> "if" '(' . COND ',' COND ',' COND ')'       (rule 58)

	'-'            shift, and enter state 63
	int            shift, and enter state 64
	real           shift, and enter state 65
	funcion        shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	"range"        shift, and enter state 69
	"if"           shift, and enter state 70
	"NOT"          shift, and enter state 71
	identificador  shift, and enter state 72

	COND           goto state 133

State 81

	COND -> "range" '(' . COND ',' COND ')'             (rule 56)

	'-'            shift, and enter state 63
	int            shift, and enter state 64
	real           shift, and enter state 65
	funcion        shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	"range"        shift, and enter state 69
	"if"           shift, and enter state 70
	"NOT"          shift, and enter state 71
	identificador  shift, and enter state 72

	COND           goto state 132

State 82

	SECUENCIA_COND -> SECUENCIA_COND . ',' COND         (rule 39)
	COND -> '[' SECUENCIA_COND . ']'                    (rule 55)

	']'            shift, and enter state 130
	','            shift, and enter state 131


State 83

	SECUENCIA_COND -> COND .                            (rule 38)
	COND -> COND . '+' COND                             (rule 42)
	COND -> COND . '-' COND                             (rule 43)
	COND -> COND . '*' COND                             (rule 44)
	COND -> COND . '/' COND                             (rule 45)
	COND -> COND . '^' COND                             (rule 46)
	COND -> '[' COND . "for" identificador "in" COND ']'    (rule 57)
	COND -> COND . "AND" COND                           (rule 59)
	COND -> COND . "OR" COND                            (rule 60)
	COND -> COND . '>' COND                             (rule 62)
	COND -> COND . '<' COND                             (rule 63)
	COND -> COND . "<=" COND                            (rule 64)
	COND -> COND . ">=" COND                            (rule 65)
	COND -> COND . "==" COND                            (rule 66)

	'+'            shift, and enter state 88
	'-'            shift, and enter state 89
	'*'            shift, and enter state 90
	'/'            shift, and enter state 91
	'^'            shift, and enter state 92
	']'            reduce using rule 38
	','            reduce using rule 38
	"for"          shift, and enter state 129
	"AND"          shift, and enter state 94
	"OR"           shift, and enter state 95
	'<'            shift, and enter state 96
	'>'            shift, and enter state 97
	">="           shift, and enter state 98
	"<="           shift, and enter state 99
	"=="           shift, and enter state 100


State 84

	COND -> '[' ']' .                                   (rule 54)

	'+'            reduce using rule 54
	'-'            reduce using rule 54
	'*'            reduce using rule 54
	'/'            reduce using rule 54
	'^'            reduce using rule 54
	')'            reduce using rule 54
	']'            reduce using rule 54
	','            reduce using rule 54
	"for"          reduce using rule 54
	"AND"          reduce using rule 54
	"OR"           reduce using rule 54
	'<'            reduce using rule 54
	'>'            reduce using rule 54
	">="           reduce using rule 54
	"<="           reduce using rule 54
	"=="           reduce using rule 54


State 85

	COND -> COND . '+' COND                             (rule 42)
	COND -> COND . '-' COND                             (rule 43)
	COND -> COND . '*' COND                             (rule 44)
	COND -> COND . '/' COND                             (rule 45)
	COND -> COND . '^' COND                             (rule 46)
	COND -> '(' COND . ')'                              (rule 48)
	COND -> COND . "AND" COND                           (rule 59)
	COND -> COND . "OR" COND                            (rule 60)
	COND -> COND . '>' COND                             (rule 62)
	COND -> COND . '<' COND                             (rule 63)
	COND -> COND . "<=" COND                            (rule 64)
	COND -> COND . ">=" COND                            (rule 65)
	COND -> COND . "==" COND                            (rule 66)

	'+'            shift, and enter state 88
	'-'            shift, and enter state 89
	'*'            shift, and enter state 90
	'/'            shift, and enter state 91
	'^'            shift, and enter state 92
	')'            shift, and enter state 128
	"AND"          shift, and enter state 94
	"OR"           shift, and enter state 95
	'<'            shift, and enter state 96
	'>'            shift, and enter state 97
	">="           shift, and enter state 98
	"<="           shift, and enter state 99
	"=="           shift, and enter state 100


State 86

	COND -> funcion '(' . COND ')'                      (rule 51)

	'-'            shift, and enter state 63
	int            shift, and enter state 64
	real           shift, and enter state 65
	funcion        shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	"range"        shift, and enter state 69
	"if"           shift, and enter state 70
	"NOT"          shift, and enter state 71
	identificador  shift, and enter state 72

	COND           goto state 127

State 87

	COND -> COND . '+' COND                             (rule 42)
	COND -> COND . '-' COND                             (rule 43)
	COND -> COND . '*' COND                             (rule 44)
	COND -> COND . '/' COND                             (rule 45)
	COND -> COND . '^' COND                             (rule 46)
	COND -> '-' COND .                                  (rule 47)
	COND -> COND . "AND" COND                           (rule 59)
	COND -> COND . "OR" COND                            (rule 60)
	COND -> COND . '>' COND                             (rule 62)
	COND -> COND . '<' COND                             (rule 63)
	COND -> COND . "<=" COND                            (rule 64)
	COND -> COND . ">=" COND                            (rule 65)
	COND -> COND . "==" COND                            (rule 66)

	'+'            reduce using rule 47
	'-'            reduce using rule 47
	'*'            reduce using rule 47
	'/'            reduce using rule 47
	'^'            shift, and enter state 92
	')'            reduce using rule 47
	']'            reduce using rule 47
	','            reduce using rule 47
	"for"          reduce using rule 47
	"AND"          reduce using rule 47
	"OR"           reduce using rule 47
	'<'            reduce using rule 47
	'>'            reduce using rule 47
	">="           reduce using rule 47
	"<="           reduce using rule 47
	"=="           reduce using rule 47


State 88

	COND -> COND '+' . COND                             (rule 42)

	'-'            shift, and enter state 63
	int            shift, and enter state 64
	real           shift, and enter state 65
	funcion        shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	"range"        shift, and enter state 69
	"if"           shift, and enter state 70
	"NOT"          shift, and enter state 71
	identificador  shift, and enter state 72

	COND           goto state 126

State 89

	COND -> COND '-' . COND                             (rule 43)

	'-'            shift, and enter state 63
	int            shift, and enter state 64
	real           shift, and enter state 65
	funcion        shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	"range"        shift, and enter state 69
	"if"           shift, and enter state 70
	"NOT"          shift, and enter state 71
	identificador  shift, and enter state 72

	COND           goto state 125

State 90

	COND -> COND '*' . COND                             (rule 44)

	'-'            shift, and enter state 63
	int            shift, and enter state 64
	real           shift, and enter state 65
	funcion        shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	"range"        shift, and enter state 69
	"if"           shift, and enter state 70
	"NOT"          shift, and enter state 71
	identificador  shift, and enter state 72

	COND           goto state 124

State 91

	COND -> COND '/' . COND                             (rule 45)

	'-'            shift, and enter state 63
	int            shift, and enter state 64
	real           shift, and enter state 65
	funcion        shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	"range"        shift, and enter state 69
	"if"           shift, and enter state 70
	"NOT"          shift, and enter state 71
	identificador  shift, and enter state 72

	COND           goto state 123

State 92

	COND -> COND '^' . COND                             (rule 46)

	'-'            shift, and enter state 63
	int            shift, and enter state 64
	real           shift, and enter state 65
	funcion        shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	"range"        shift, and enter state 69
	"if"           shift, and enter state 70
	"NOT"          shift, and enter state 71
	identificador  shift, and enter state 72

	COND           goto state 122

State 93

	EM -> "if" '(' COND ',' . EM ',' EM ')'             (rule 35)

	'-'            shift, and enter state 15
	int            shift, and enter state 16
	real           shift, and enter state 17
	funcion        shift, and enter state 18
	'('            shift, and enter state 19
	'['            shift, and enter state 20
	"range"        shift, and enter state 21
	"if"           shift, and enter state 22
	identificador  shift, and enter state 23

	EM             goto state 121

State 94

	COND -> COND "AND" . COND                           (rule 59)

	'-'            shift, and enter state 63
	int            shift, and enter state 64
	real           shift, and enter state 65
	funcion        shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	"range"        shift, and enter state 69
	"if"           shift, and enter state 70
	"NOT"          shift, and enter state 71
	identificador  shift, and enter state 72

	COND           goto state 120

State 95

	COND -> COND "OR" . COND                            (rule 60)

	'-'            shift, and enter state 63
	int            shift, and enter state 64
	real           shift, and enter state 65
	funcion        shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	"range"        shift, and enter state 69
	"if"           shift, and enter state 70
	"NOT"          shift, and enter state 71
	identificador  shift, and enter state 72

	COND           goto state 119

State 96

	COND -> COND '<' . COND                             (rule 63)

	'-'            shift, and enter state 63
	int            shift, and enter state 64
	real           shift, and enter state 65
	funcion        shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	"range"        shift, and enter state 69
	"if"           shift, and enter state 70
	"NOT"          shift, and enter state 71
	identificador  shift, and enter state 72

	COND           goto state 118

State 97

	COND -> COND '>' . COND                             (rule 62)

	'-'            shift, and enter state 63
	int            shift, and enter state 64
	real           shift, and enter state 65
	funcion        shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	"range"        shift, and enter state 69
	"if"           shift, and enter state 70
	"NOT"          shift, and enter state 71
	identificador  shift, and enter state 72

	COND           goto state 117

State 98

	COND -> COND ">=" . COND                            (rule 65)

	'-'            shift, and enter state 63
	int            shift, and enter state 64
	real           shift, and enter state 65
	funcion        shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	"range"        shift, and enter state 69
	"if"           shift, and enter state 70
	"NOT"          shift, and enter state 71
	identificador  shift, and enter state 72

	COND           goto state 116

State 99

	COND -> COND "<=" . COND                            (rule 64)

	'-'            shift, and enter state 63
	int            shift, and enter state 64
	real           shift, and enter state 65
	funcion        shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	"range"        shift, and enter state 69
	"if"           shift, and enter state 70
	"NOT"          shift, and enter state 71
	identificador  shift, and enter state 72

	COND           goto state 115

State 100

	COND -> COND "==" . COND                            (rule 66)

	'-'            shift, and enter state 63
	int            shift, and enter state 64
	real           shift, and enter state 65
	funcion        shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	"range"        shift, and enter state 69
	"if"           shift, and enter state 70
	"NOT"          shift, and enter state 71
	identificador  shift, and enter state 72

	COND           goto state 114

State 101

	EM -> "range" '(' EM ',' . EM ')'                   (rule 33)

	'-'            shift, and enter state 15
	int            shift, and enter state 16
	real           shift, and enter state 17
	funcion        shift, and enter state 18
	'('            shift, and enter state 19
	'['            shift, and enter state 20
	"range"        shift, and enter state 21
	"if"           shift, and enter state 22
	identificador  shift, and enter state 23

	EM             goto state 113

State 102

	EM -> '[' EM "for" identificador . "in" EM ']'      (rule 34)

	"in"           shift, and enter state 112


State 103

	EM -> EM . '+' EM                                   (rule 19)
	EM -> EM . '-' EM                                   (rule 20)
	EM -> EM . '*' EM                                   (rule 21)
	EM -> EM . '/' EM                                   (rule 22)
	EM -> EM . '^' EM                                   (rule 23)
	SECUENCIA_EM -> SECUENCIA_EM ',' EM .               (rule 37)

	'+'            shift, and enter state 39
	'-'            shift, and enter state 40
	'*'            shift, and enter state 41
	'/'            shift, and enter state 42
	'^'            shift, and enter state 43
	']'            reduce using rule 37
	','            reduce using rule 37


State 104

	EM -> funcion '(' EM ')' .                          (rule 28)

	'+'            reduce using rule 28
	'-'            reduce using rule 28
	'*'            reduce using rule 28
	'/'            reduce using rule 28
	'^'            reduce using rule 28
	')'            reduce using rule 28
	']'            reduce using rule 28
	','            reduce using rule 28
	"for"          reduce using rule 28
	';'            reduce using rule 28
	"with"         reduce using rule 28
	"plot"         reduce using rule 28
	"endfor"       reduce using rule 28
	"step"         reduce using rule 28
	"push_back"    reduce using rule 28
	identificador  reduce using rule 28
	%eof           reduce using rule 28


State 105

	INSTR -> "plot" EM ',' EM "with" . '[' ']'          (rule 12)
	INSTR -> "plot" EM ',' EM "with" . '[' SECUENCIA_ESTILO ']'    (rule 13)
	INSTR -> "plot" EM ',' EM "with" . estilo           (rule 14)

	'['            shift, and enter state 110
	estilo         shift, and enter state 111


State 106

	INSTR -> "push_back" '(' identificador ',' EM . ')'    (rule 16)
	EM -> EM . '+' EM                                   (rule 19)
	EM -> EM . '-' EM                                   (rule 20)
	EM -> EM . '*' EM                                   (rule 21)
	EM -> EM . '/' EM                                   (rule 22)
	EM -> EM . '^' EM                                   (rule 23)

	'+'            shift, and enter state 39
	'-'            shift, and enter state 40
	'*'            shift, and enter state 41
	'/'            shift, and enter state 42
	'^'            shift, and enter state 43
	')'            shift, and enter state 109


State 107

	INSTR -> identificador '(' identificador ')' '=' . EM    (rule 10)

	'-'            shift, and enter state 15
	int            shift, and enter state 16
	real           shift, and enter state 17
	funcion        shift, and enter state 18
	'('            shift, and enter state 19
	'['            shift, and enter state 20
	"range"        shift, and enter state 21
	"if"           shift, and enter state 22
	identificador  shift, and enter state 23

	EM             goto state 108

State 108

	INSTR -> identificador '(' identificador ')' '=' EM .    (rule 10)
	EM -> EM . '+' EM                                   (rule 19)
	EM -> EM . '-' EM                                   (rule 20)
	EM -> EM . '*' EM                                   (rule 21)
	EM -> EM . '/' EM                                   (rule 22)
	EM -> EM . '^' EM                                   (rule 23)

	'+'            shift, and enter state 39
	'-'            shift, and enter state 40
	'*'            shift, and enter state 41
	'/'            shift, and enter state 42
	'^'            shift, and enter state 43
	';'            reduce using rule 10
	"endfor"       reduce using rule 10
	%eof           reduce using rule 10


State 109

	INSTR -> "push_back" '(' identificador ',' EM ')' .    (rule 16)

	';'            reduce using rule 16
	"endfor"       reduce using rule 16
	%eof           reduce using rule 16


State 110

	INSTR -> "plot" EM ',' EM "with" '[' . ']'          (rule 12)
	INSTR -> "plot" EM ',' EM "with" '[' . SECUENCIA_ESTILO ']'    (rule 13)

	']'            shift, and enter state 148
	estilo         shift, and enter state 149

	SECUENCIA_ESTILOgoto state 147

State 111

	INSTR -> "plot" EM ',' EM "with" estilo .           (rule 14)

	';'            reduce using rule 14
	"endfor"       reduce using rule 14
	%eof           reduce using rule 14


State 112

	EM -> '[' EM "for" identificador "in" . EM ']'      (rule 34)

	'-'            shift, and enter state 15
	int            shift, and enter state 16
	real           shift, and enter state 17
	funcion        shift, and enter state 18
	'('            shift, and enter state 19
	'['            shift, and enter state 20
	"range"        shift, and enter state 21
	"if"           shift, and enter state 22
	identificador  shift, and enter state 23

	EM             goto state 146

State 113

	EM -> EM . '+' EM                                   (rule 19)
	EM -> EM . '-' EM                                   (rule 20)
	EM -> EM . '*' EM                                   (rule 21)
	EM -> EM . '/' EM                                   (rule 22)
	EM -> EM . '^' EM                                   (rule 23)
	EM -> "range" '(' EM ',' EM . ')'                   (rule 33)

	'+'            shift, and enter state 39
	'-'            shift, and enter state 40
	'*'            shift, and enter state 41
	'/'            shift, and enter state 42
	'^'            shift, and enter state 43
	')'            shift, and enter state 145


State 114

	COND -> COND . '+' COND                             (rule 42)
	COND -> COND . '-' COND                             (rule 43)
	COND -> COND . '*' COND                             (rule 44)
	COND -> COND . '/' COND                             (rule 45)
	COND -> COND . '^' COND                             (rule 46)
	COND -> COND . "AND" COND                           (rule 59)
	COND -> COND . "OR" COND                            (rule 60)
	COND -> COND . '>' COND                             (rule 62)
	COND -> COND . '<' COND                             (rule 63)
	COND -> COND . "<=" COND                            (rule 64)
	COND -> COND . ">=" COND                            (rule 65)
	COND -> COND . "==" COND                            (rule 66)
	COND -> COND "==" COND .                            (rule 66)

	'+'            shift, and enter state 88
	'-'            shift, and enter state 89
	'*'            shift, and enter state 90
	'/'            shift, and enter state 91
	'^'            shift, and enter state 92
	')'            reduce using rule 66
	']'            reduce using rule 66
	','            reduce using rule 66
	"for"          reduce using rule 66
	"AND"          reduce using rule 66
	"OR"           reduce using rule 66
	'<'            reduce using rule 66
	'>'            reduce using rule 66
	">="           reduce using rule 66
	"<="           reduce using rule 66
	"=="           reduce using rule 66


State 115

	COND -> COND . '+' COND                             (rule 42)
	COND -> COND . '-' COND                             (rule 43)
	COND -> COND . '*' COND                             (rule 44)
	COND -> COND . '/' COND                             (rule 45)
	COND -> COND . '^' COND                             (rule 46)
	COND -> COND . "AND" COND                           (rule 59)
	COND -> COND . "OR" COND                            (rule 60)
	COND -> COND . '>' COND                             (rule 62)
	COND -> COND . '<' COND                             (rule 63)
	COND -> COND . "<=" COND                            (rule 64)
	COND -> COND "<=" COND .                            (rule 64)
	COND -> COND . ">=" COND                            (rule 65)
	COND -> COND . "==" COND                            (rule 66)

	'+'            shift, and enter state 88
	'-'            shift, and enter state 89
	'*'            shift, and enter state 90
	'/'            shift, and enter state 91
	'^'            shift, and enter state 92
	')'            reduce using rule 64
	']'            reduce using rule 64
	','            reduce using rule 64
	"for"          reduce using rule 64
	"AND"          reduce using rule 64
	"OR"           reduce using rule 64
	'<'            reduce using rule 64
	'>'            reduce using rule 64
	">="           reduce using rule 64
	"<="           reduce using rule 64
	"=="           reduce using rule 64


State 116

	COND -> COND . '+' COND                             (rule 42)
	COND -> COND . '-' COND                             (rule 43)
	COND -> COND . '*' COND                             (rule 44)
	COND -> COND . '/' COND                             (rule 45)
	COND -> COND . '^' COND                             (rule 46)
	COND -> COND . "AND" COND                           (rule 59)
	COND -> COND . "OR" COND                            (rule 60)
	COND -> COND . '>' COND                             (rule 62)
	COND -> COND . '<' COND                             (rule 63)
	COND -> COND . "<=" COND                            (rule 64)
	COND -> COND . ">=" COND                            (rule 65)
	COND -> COND ">=" COND .                            (rule 65)
	COND -> COND . "==" COND                            (rule 66)

	'+'            shift, and enter state 88
	'-'            shift, and enter state 89
	'*'            shift, and enter state 90
	'/'            shift, and enter state 91
	'^'            shift, and enter state 92
	')'            reduce using rule 65
	']'            reduce using rule 65
	','            reduce using rule 65
	"for"          reduce using rule 65
	"AND"          reduce using rule 65
	"OR"           reduce using rule 65
	'<'            reduce using rule 65
	'>'            reduce using rule 65
	">="           reduce using rule 65
	"<="           reduce using rule 65
	"=="           reduce using rule 65


State 117

	COND -> COND . '+' COND                             (rule 42)
	COND -> COND . '-' COND                             (rule 43)
	COND -> COND . '*' COND                             (rule 44)
	COND -> COND . '/' COND                             (rule 45)
	COND -> COND . '^' COND                             (rule 46)
	COND -> COND . "AND" COND                           (rule 59)
	COND -> COND . "OR" COND                            (rule 60)
	COND -> COND . '>' COND                             (rule 62)
	COND -> COND '>' COND .                             (rule 62)
	COND -> COND . '<' COND                             (rule 63)
	COND -> COND . "<=" COND                            (rule 64)
	COND -> COND . ">=" COND                            (rule 65)
	COND -> COND . "==" COND                            (rule 66)

	'+'            shift, and enter state 88
	'-'            shift, and enter state 89
	'*'            shift, and enter state 90
	'/'            shift, and enter state 91
	'^'            shift, and enter state 92
	')'            reduce using rule 62
	']'            reduce using rule 62
	','            reduce using rule 62
	"for"          reduce using rule 62
	"AND"          reduce using rule 62
	"OR"           reduce using rule 62
	'<'            reduce using rule 62
	'>'            reduce using rule 62
	">="           reduce using rule 62
	"<="           reduce using rule 62
	"=="           reduce using rule 62


State 118

	COND -> COND . '+' COND                             (rule 42)
	COND -> COND . '-' COND                             (rule 43)
	COND -> COND . '*' COND                             (rule 44)
	COND -> COND . '/' COND                             (rule 45)
	COND -> COND . '^' COND                             (rule 46)
	COND -> COND . "AND" COND                           (rule 59)
	COND -> COND . "OR" COND                            (rule 60)
	COND -> COND . '>' COND                             (rule 62)
	COND -> COND . '<' COND                             (rule 63)
	COND -> COND '<' COND .                             (rule 63)
	COND -> COND . "<=" COND                            (rule 64)
	COND -> COND . ">=" COND                            (rule 65)
	COND -> COND . "==" COND                            (rule 66)

	'+'            shift, and enter state 88
	'-'            shift, and enter state 89
	'*'            shift, and enter state 90
	'/'            shift, and enter state 91
	'^'            shift, and enter state 92
	')'            reduce using rule 63
	']'            reduce using rule 63
	','            reduce using rule 63
	"for"          reduce using rule 63
	"AND"          reduce using rule 63
	"OR"           reduce using rule 63
	'<'            reduce using rule 63
	'>'            reduce using rule 63
	">="           reduce using rule 63
	"<="           reduce using rule 63
	"=="           reduce using rule 63


State 119

	COND -> COND . '+' COND                             (rule 42)
	COND -> COND . '-' COND                             (rule 43)
	COND -> COND . '*' COND                             (rule 44)
	COND -> COND . '/' COND                             (rule 45)
	COND -> COND . '^' COND                             (rule 46)
	COND -> COND . "AND" COND                           (rule 59)
	COND -> COND . "OR" COND                            (rule 60)
	COND -> COND "OR" COND .                            (rule 60)
	COND -> COND . '>' COND                             (rule 62)
	COND -> COND . '<' COND                             (rule 63)
	COND -> COND . "<=" COND                            (rule 64)
	COND -> COND . ">=" COND                            (rule 65)
	COND -> COND . "==" COND                            (rule 66)

	'+'            shift, and enter state 88
	'-'            shift, and enter state 89
	'*'            shift, and enter state 90
	'/'            shift, and enter state 91
	'^'            shift, and enter state 92
	')'            reduce using rule 60
	']'            reduce using rule 60
	','            reduce using rule 60
	"for"          reduce using rule 60
	"AND"          shift, and enter state 94
	"OR"           reduce using rule 60
	'<'            shift, and enter state 96
	'>'            shift, and enter state 97
	">="           shift, and enter state 98
	"<="           shift, and enter state 99
	"=="           shift, and enter state 100


State 120

	COND -> COND . '+' COND                             (rule 42)
	COND -> COND . '-' COND                             (rule 43)
	COND -> COND . '*' COND                             (rule 44)
	COND -> COND . '/' COND                             (rule 45)
	COND -> COND . '^' COND                             (rule 46)
	COND -> COND . "AND" COND                           (rule 59)
	COND -> COND "AND" COND .                           (rule 59)
	COND -> COND . "OR" COND                            (rule 60)
	COND -> COND . '>' COND                             (rule 62)
	COND -> COND . '<' COND                             (rule 63)
	COND -> COND . "<=" COND                            (rule 64)
	COND -> COND . ">=" COND                            (rule 65)
	COND -> COND . "==" COND                            (rule 66)

	'+'            shift, and enter state 88
	'-'            shift, and enter state 89
	'*'            shift, and enter state 90
	'/'            shift, and enter state 91
	'^'            shift, and enter state 92
	')'            reduce using rule 59
	']'            reduce using rule 59
	','            reduce using rule 59
	"for"          reduce using rule 59
	"AND"          reduce using rule 59
	"OR"           reduce using rule 59
	'<'            shift, and enter state 96
	'>'            shift, and enter state 97
	">="           shift, and enter state 98
	"<="           shift, and enter state 99
	"=="           shift, and enter state 100


State 121

	EM -> EM . '+' EM                                   (rule 19)
	EM -> EM . '-' EM                                   (rule 20)
	EM -> EM . '*' EM                                   (rule 21)
	EM -> EM . '/' EM                                   (rule 22)
	EM -> EM . '^' EM                                   (rule 23)
	EM -> "if" '(' COND ',' EM . ',' EM ')'             (rule 35)

	'+'            shift, and enter state 39
	'-'            shift, and enter state 40
	'*'            shift, and enter state 41
	'/'            shift, and enter state 42
	'^'            shift, and enter state 43
	','            shift, and enter state 144


State 122

	COND -> COND . '+' COND                             (rule 42)
	COND -> COND . '-' COND                             (rule 43)
	COND -> COND . '*' COND                             (rule 44)
	COND -> COND . '/' COND                             (rule 45)
	COND -> COND . '^' COND                             (rule 46)
	COND -> COND '^' COND .                             (rule 46)
	COND -> COND . "AND" COND                           (rule 59)
	COND -> COND . "OR" COND                            (rule 60)
	COND -> COND . '>' COND                             (rule 62)
	COND -> COND . '<' COND                             (rule 63)
	COND -> COND . "<=" COND                            (rule 64)
	COND -> COND . ">=" COND                            (rule 65)
	COND -> COND . "==" COND                            (rule 66)

	'+'            reduce using rule 46
	'-'            reduce using rule 46
	'*'            reduce using rule 46
	'/'            reduce using rule 46
	'^'            shift, and enter state 92
	')'            reduce using rule 46
	']'            reduce using rule 46
	','            reduce using rule 46
	"for"          reduce using rule 46
	"AND"          reduce using rule 46
	"OR"           reduce using rule 46
	'<'            reduce using rule 46
	'>'            reduce using rule 46
	">="           reduce using rule 46
	"<="           reduce using rule 46
	"=="           reduce using rule 46


State 123

	COND -> COND . '+' COND                             (rule 42)
	COND -> COND . '-' COND                             (rule 43)
	COND -> COND . '*' COND                             (rule 44)
	COND -> COND . '/' COND                             (rule 45)
	COND -> COND '/' COND .                             (rule 45)
	COND -> COND . '^' COND                             (rule 46)
	COND -> COND . "AND" COND                           (rule 59)
	COND -> COND . "OR" COND                            (rule 60)
	COND -> COND . '>' COND                             (rule 62)
	COND -> COND . '<' COND                             (rule 63)
	COND -> COND . "<=" COND                            (rule 64)
	COND -> COND . ">=" COND                            (rule 65)
	COND -> COND . "==" COND                            (rule 66)

	'+'            reduce using rule 45
	'-'            reduce using rule 45
	'*'            reduce using rule 45
	'/'            reduce using rule 45
	'^'            shift, and enter state 92
	')'            reduce using rule 45
	']'            reduce using rule 45
	','            reduce using rule 45
	"for"          reduce using rule 45
	"AND"          reduce using rule 45
	"OR"           reduce using rule 45
	'<'            reduce using rule 45
	'>'            reduce using rule 45
	">="           reduce using rule 45
	"<="           reduce using rule 45
	"=="           reduce using rule 45


State 124

	COND -> COND . '+' COND                             (rule 42)
	COND -> COND . '-' COND                             (rule 43)
	COND -> COND . '*' COND                             (rule 44)
	COND -> COND '*' COND .                             (rule 44)
	COND -> COND . '/' COND                             (rule 45)
	COND -> COND . '^' COND                             (rule 46)
	COND -> COND . "AND" COND                           (rule 59)
	COND -> COND . "OR" COND                            (rule 60)
	COND -> COND . '>' COND                             (rule 62)
	COND -> COND . '<' COND                             (rule 63)
	COND -> COND . "<=" COND                            (rule 64)
	COND -> COND . ">=" COND                            (rule 65)
	COND -> COND . "==" COND                            (rule 66)

	'+'            reduce using rule 44
	'-'            reduce using rule 44
	'*'            reduce using rule 44
	'/'            reduce using rule 44
	'^'            shift, and enter state 92
	')'            reduce using rule 44
	']'            reduce using rule 44
	','            reduce using rule 44
	"for"          reduce using rule 44
	"AND"          reduce using rule 44
	"OR"           reduce using rule 44
	'<'            reduce using rule 44
	'>'            reduce using rule 44
	">="           reduce using rule 44
	"<="           reduce using rule 44
	"=="           reduce using rule 44


State 125

	COND -> COND . '+' COND                             (rule 42)
	COND -> COND . '-' COND                             (rule 43)
	COND -> COND '-' COND .                             (rule 43)
	COND -> COND . '*' COND                             (rule 44)
	COND -> COND . '/' COND                             (rule 45)
	COND -> COND . '^' COND                             (rule 46)
	COND -> COND . "AND" COND                           (rule 59)
	COND -> COND . "OR" COND                            (rule 60)
	COND -> COND . '>' COND                             (rule 62)
	COND -> COND . '<' COND                             (rule 63)
	COND -> COND . "<=" COND                            (rule 64)
	COND -> COND . ">=" COND                            (rule 65)
	COND -> COND . "==" COND                            (rule 66)

	'+'            reduce using rule 43
	'-'            reduce using rule 43
	'*'            shift, and enter state 90
	'/'            shift, and enter state 91
	'^'            shift, and enter state 92
	')'            reduce using rule 43
	']'            reduce using rule 43
	','            reduce using rule 43
	"for"          reduce using rule 43
	"AND"          reduce using rule 43
	"OR"           reduce using rule 43
	'<'            reduce using rule 43
	'>'            reduce using rule 43
	">="           reduce using rule 43
	"<="           reduce using rule 43
	"=="           reduce using rule 43


State 126

	COND -> COND . '+' COND                             (rule 42)
	COND -> COND '+' COND .                             (rule 42)
	COND -> COND . '-' COND                             (rule 43)
	COND -> COND . '*' COND                             (rule 44)
	COND -> COND . '/' COND                             (rule 45)
	COND -> COND . '^' COND                             (rule 46)
	COND -> COND . "AND" COND                           (rule 59)
	COND -> COND . "OR" COND                            (rule 60)
	COND -> COND . '>' COND                             (rule 62)
	COND -> COND . '<' COND                             (rule 63)
	COND -> COND . "<=" COND                            (rule 64)
	COND -> COND . ">=" COND                            (rule 65)
	COND -> COND . "==" COND                            (rule 66)

	'+'            reduce using rule 42
	'-'            reduce using rule 42
	'*'            shift, and enter state 90
	'/'            shift, and enter state 91
	'^'            shift, and enter state 92
	')'            reduce using rule 42
	']'            reduce using rule 42
	','            reduce using rule 42
	"for"          reduce using rule 42
	"AND"          reduce using rule 42
	"OR"           reduce using rule 42
	'<'            reduce using rule 42
	'>'            reduce using rule 42
	">="           reduce using rule 42
	"<="           reduce using rule 42
	"=="           reduce using rule 42


State 127

	COND -> COND . '+' COND                             (rule 42)
	COND -> COND . '-' COND                             (rule 43)
	COND -> COND . '*' COND                             (rule 44)
	COND -> COND . '/' COND                             (rule 45)
	COND -> COND . '^' COND                             (rule 46)
	COND -> funcion '(' COND . ')'                      (rule 51)
	COND -> COND . "AND" COND                           (rule 59)
	COND -> COND . "OR" COND                            (rule 60)
	COND -> COND . '>' COND                             (rule 62)
	COND -> COND . '<' COND                             (rule 63)
	COND -> COND . "<=" COND                            (rule 64)
	COND -> COND . ">=" COND                            (rule 65)
	COND -> COND . "==" COND                            (rule 66)

	'+'            shift, and enter state 88
	'-'            shift, and enter state 89
	'*'            shift, and enter state 90
	'/'            shift, and enter state 91
	'^'            shift, and enter state 92
	')'            shift, and enter state 143
	"AND"          shift, and enter state 94
	"OR"           shift, and enter state 95
	'<'            shift, and enter state 96
	'>'            shift, and enter state 97
	">="           shift, and enter state 98
	"<="           shift, and enter state 99
	"=="           shift, and enter state 100


State 128

	COND -> '(' COND ')' .                              (rule 48)

	'+'            reduce using rule 48
	'-'            reduce using rule 48
	'*'            reduce using rule 48
	'/'            reduce using rule 48
	'^'            reduce using rule 48
	')'            reduce using rule 48
	']'            reduce using rule 48
	','            reduce using rule 48
	"for"          reduce using rule 48
	"AND"          reduce using rule 48
	"OR"           reduce using rule 48
	'<'            reduce using rule 48
	'>'            reduce using rule 48
	">="           reduce using rule 48
	"<="           reduce using rule 48
	"=="           reduce using rule 48


State 129

	COND -> '[' COND "for" . identificador "in" COND ']'    (rule 57)

	identificador  shift, and enter state 142


State 130

	COND -> '[' SECUENCIA_COND ']' .                    (rule 55)

	'+'            reduce using rule 55
	'-'            reduce using rule 55
	'*'            reduce using rule 55
	'/'            reduce using rule 55
	'^'            reduce using rule 55
	')'            reduce using rule 55
	']'            reduce using rule 55
	','            reduce using rule 55
	"for"          reduce using rule 55
	"AND"          reduce using rule 55
	"OR"           reduce using rule 55
	'<'            reduce using rule 55
	'>'            reduce using rule 55
	">="           reduce using rule 55
	"<="           reduce using rule 55
	"=="           reduce using rule 55


State 131

	SECUENCIA_COND -> SECUENCIA_COND ',' . COND         (rule 39)

	'-'            shift, and enter state 63
	int            shift, and enter state 64
	real           shift, and enter state 65
	funcion        shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	"range"        shift, and enter state 69
	"if"           shift, and enter state 70
	"NOT"          shift, and enter state 71
	identificador  shift, and enter state 72

	COND           goto state 141

State 132

	COND -> COND . '+' COND                             (rule 42)
	COND -> COND . '-' COND                             (rule 43)
	COND -> COND . '*' COND                             (rule 44)
	COND -> COND . '/' COND                             (rule 45)
	COND -> COND . '^' COND                             (rule 46)
	COND -> "range" '(' COND . ',' COND ')'             (rule 56)
	COND -> COND . "AND" COND                           (rule 59)
	COND -> COND . "OR" COND                            (rule 60)
	COND -> COND . '>' COND                             (rule 62)
	COND -> COND . '<' COND                             (rule 63)
	COND -> COND . "<=" COND                            (rule 64)
	COND -> COND . ">=" COND                            (rule 65)
	COND -> COND . "==" COND                            (rule 66)

	'+'            shift, and enter state 88
	'-'            shift, and enter state 89
	'*'            shift, and enter state 90
	'/'            shift, and enter state 91
	'^'            shift, and enter state 92
	','            shift, and enter state 140
	"AND"          shift, and enter state 94
	"OR"           shift, and enter state 95
	'<'            shift, and enter state 96
	'>'            shift, and enter state 97
	">="           shift, and enter state 98
	"<="           shift, and enter state 99
	"=="           shift, and enter state 100


State 133

	COND -> COND . '+' COND                             (rule 42)
	COND -> COND . '-' COND                             (rule 43)
	COND -> COND . '*' COND                             (rule 44)
	COND -> COND . '/' COND                             (rule 45)
	COND -> COND . '^' COND                             (rule 46)
	COND -> "if" '(' COND . ',' COND ',' COND ')'       (rule 58)
	COND -> COND . "AND" COND                           (rule 59)
	COND -> COND . "OR" COND                            (rule 60)
	COND -> COND . '>' COND                             (rule 62)
	COND -> COND . '<' COND                             (rule 63)
	COND -> COND . "<=" COND                            (rule 64)
	COND -> COND . ">=" COND                            (rule 65)
	COND -> COND . "==" COND                            (rule 66)

	'+'            shift, and enter state 88
	'-'            shift, and enter state 89
	'*'            shift, and enter state 90
	'/'            shift, and enter state 91
	'^'            shift, and enter state 92
	','            shift, and enter state 139
	"AND"          shift, and enter state 94
	"OR"           shift, and enter state 95
	'<'            shift, and enter state 96
	'>'            shift, and enter state 97
	">="           shift, and enter state 98
	"<="           shift, and enter state 99
	"=="           shift, and enter state 100


State 134

	COND -> COND . '+' COND                             (rule 42)
	COND -> COND . '-' COND                             (rule 43)
	COND -> COND . '*' COND                             (rule 44)
	COND -> COND . '/' COND                             (rule 45)
	COND -> COND . '^' COND                             (rule 46)
	COND -> identificador '(' COND . ')'                (rule 52)
	COND -> COND . "AND" COND                           (rule 59)
	COND -> COND . "OR" COND                            (rule 60)
	COND -> COND . '>' COND                             (rule 62)
	COND -> COND . '<' COND                             (rule 63)
	COND -> COND . "<=" COND                            (rule 64)
	COND -> COND . ">=" COND                            (rule 65)
	COND -> COND . "==" COND                            (rule 66)

	'+'            shift, and enter state 88
	'-'            shift, and enter state 89
	'*'            shift, and enter state 90
	'/'            shift, and enter state 91
	'^'            shift, and enter state 92
	')'            shift, and enter state 138
	"AND"          shift, and enter state 94
	"OR"           shift, and enter state 95
	'<'            shift, and enter state 96
	'>'            shift, and enter state 97
	">="           shift, and enter state 98
	"<="           shift, and enter state 99
	"=="           shift, and enter state 100


State 135

	CICLO -> "for" identificador "in" EM "step" EM . SECUENCIA_1 "endfor"    (rule 18)
	EM -> EM . '+' EM                                   (rule 19)
	EM -> EM . '-' EM                                   (rule 20)
	EM -> EM . '*' EM                                   (rule 21)
	EM -> EM . '/' EM                                   (rule 22)
	EM -> EM . '^' EM                                   (rule 23)

	'+'            shift, and enter state 39
	'-'            shift, and enter state 40
	'*'            shift, and enter state 41
	'/'            shift, and enter state 42
	'^'            shift, and enter state 43
	"for"          shift, and enter state 6
	"plot"         shift, and enter state 7
	"push_back"    shift, and enter state 8
	identificador  shift, and enter state 9

	SECUENCIA_1    goto state 137
	SECUENCIA_2    goto state 3
	INSTR          goto state 4
	CICLO          goto state 5

State 136

	CICLO -> "for" identificador "in" EM SECUENCIA_1 "endfor" .    (rule 17)

	"for"          reduce using rule 17
	"plot"         reduce using rule 17
	"endfor"       reduce using rule 17
	"push_back"    reduce using rule 17
	identificador  reduce using rule 17
	%eof           reduce using rule 17


State 137

	CICLO -> "for" identificador "in" EM "step" EM SECUENCIA_1 . "endfor"    (rule 18)

	"endfor"       shift, and enter state 157


State 138

	COND -> identificador '(' COND ')' .                (rule 52)

	'+'            reduce using rule 52
	'-'            reduce using rule 52
	'*'            reduce using rule 52
	'/'            reduce using rule 52
	'^'            reduce using rule 52
	')'            reduce using rule 52
	']'            reduce using rule 52
	','            reduce using rule 52
	"for"          reduce using rule 52
	"AND"          reduce using rule 52
	"OR"           reduce using rule 52
	'<'            reduce using rule 52
	'>'            reduce using rule 52
	">="           reduce using rule 52
	"<="           reduce using rule 52
	"=="           reduce using rule 52


State 139

	COND -> "if" '(' COND ',' . COND ',' COND ')'       (rule 58)

	'-'            shift, and enter state 63
	int            shift, and enter state 64
	real           shift, and enter state 65
	funcion        shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	"range"        shift, and enter state 69
	"if"           shift, and enter state 70
	"NOT"          shift, and enter state 71
	identificador  shift, and enter state 72

	COND           goto state 156

State 140

	COND -> "range" '(' COND ',' . COND ')'             (rule 56)

	'-'            shift, and enter state 63
	int            shift, and enter state 64
	real           shift, and enter state 65
	funcion        shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	"range"        shift, and enter state 69
	"if"           shift, and enter state 70
	"NOT"          shift, and enter state 71
	identificador  shift, and enter state 72

	COND           goto state 155

State 141

	SECUENCIA_COND -> SECUENCIA_COND ',' COND .         (rule 39)
	COND -> COND . '+' COND                             (rule 42)
	COND -> COND . '-' COND                             (rule 43)
	COND -> COND . '*' COND                             (rule 44)
	COND -> COND . '/' COND                             (rule 45)
	COND -> COND . '^' COND                             (rule 46)
	COND -> COND . "AND" COND                           (rule 59)
	COND -> COND . "OR" COND                            (rule 60)
	COND -> COND . '>' COND                             (rule 62)
	COND -> COND . '<' COND                             (rule 63)
	COND -> COND . "<=" COND                            (rule 64)
	COND -> COND . ">=" COND                            (rule 65)
	COND -> COND . "==" COND                            (rule 66)

	'+'            shift, and enter state 88
	'-'            shift, and enter state 89
	'*'            shift, and enter state 90
	'/'            shift, and enter state 91
	'^'            shift, and enter state 92
	']'            reduce using rule 39
	','            reduce using rule 39
	"AND"          shift, and enter state 94
	"OR"           shift, and enter state 95
	'<'            shift, and enter state 96
	'>'            shift, and enter state 97
	">="           shift, and enter state 98
	"<="           shift, and enter state 99
	"=="           shift, and enter state 100


State 142

	COND -> '[' COND "for" identificador . "in" COND ']'    (rule 57)

	"in"           shift, and enter state 154


State 143

	COND -> funcion '(' COND ')' .                      (rule 51)

	'+'            reduce using rule 51
	'-'            reduce using rule 51
	'*'            reduce using rule 51
	'/'            reduce using rule 51
	'^'            reduce using rule 51
	')'            reduce using rule 51
	']'            reduce using rule 51
	','            reduce using rule 51
	"for"          reduce using rule 51
	"AND"          reduce using rule 51
	"OR"           reduce using rule 51
	'<'            reduce using rule 51
	'>'            reduce using rule 51
	">="           reduce using rule 51
	"<="           reduce using rule 51
	"=="           reduce using rule 51


State 144

	EM -> "if" '(' COND ',' EM ',' . EM ')'             (rule 35)

	'-'            shift, and enter state 15
	int            shift, and enter state 16
	real           shift, and enter state 17
	funcion        shift, and enter state 18
	'('            shift, and enter state 19
	'['            shift, and enter state 20
	"range"        shift, and enter state 21
	"if"           shift, and enter state 22
	identificador  shift, and enter state 23

	EM             goto state 153

State 145

	EM -> "range" '(' EM ',' EM ')' .                   (rule 33)

	'+'            reduce using rule 33
	'-'            reduce using rule 33
	'*'            reduce using rule 33
	'/'            reduce using rule 33
	'^'            reduce using rule 33
	')'            reduce using rule 33
	']'            reduce using rule 33
	','            reduce using rule 33
	"for"          reduce using rule 33
	';'            reduce using rule 33
	"with"         reduce using rule 33
	"plot"         reduce using rule 33
	"endfor"       reduce using rule 33
	"step"         reduce using rule 33
	"push_back"    reduce using rule 33
	identificador  reduce using rule 33
	%eof           reduce using rule 33


State 146

	EM -> EM . '+' EM                                   (rule 19)
	EM -> EM . '-' EM                                   (rule 20)
	EM -> EM . '*' EM                                   (rule 21)
	EM -> EM . '/' EM                                   (rule 22)
	EM -> EM . '^' EM                                   (rule 23)
	EM -> '[' EM "for" identificador "in" EM . ']'      (rule 34)

	'+'            shift, and enter state 39
	'-'            shift, and enter state 40
	'*'            shift, and enter state 41
	'/'            shift, and enter state 42
	'^'            shift, and enter state 43
	']'            shift, and enter state 152


State 147

	INSTR -> "plot" EM ',' EM "with" '[' SECUENCIA_ESTILO . ']'    (rule 13)
	SECUENCIA_ESTILO -> SECUENCIA_ESTILO . ',' estilo    (rule 41)

	']'            shift, and enter state 150
	','            shift, and enter state 151


State 148

	INSTR -> "plot" EM ',' EM "with" '[' ']' .          (rule 12)

	';'            reduce using rule 12
	"endfor"       reduce using rule 12
	%eof           reduce using rule 12


State 149

	SECUENCIA_ESTILO -> estilo .                        (rule 40)

	']'            reduce using rule 40
	','            reduce using rule 40


State 150

	INSTR -> "plot" EM ',' EM "with" '[' SECUENCIA_ESTILO ']' .    (rule 13)

	';'            reduce using rule 13
	"endfor"       reduce using rule 13
	%eof           reduce using rule 13


State 151

	SECUENCIA_ESTILO -> SECUENCIA_ESTILO ',' . estilo    (rule 41)

	estilo         shift, and enter state 162


State 152

	EM -> '[' EM "for" identificador "in" EM ']' .      (rule 34)

	'+'            reduce using rule 34
	'-'            reduce using rule 34
	'*'            reduce using rule 34
	'/'            reduce using rule 34
	'^'            reduce using rule 34
	')'            reduce using rule 34
	']'            reduce using rule 34
	','            reduce using rule 34
	"for"          reduce using rule 34
	';'            reduce using rule 34
	"with"         reduce using rule 34
	"plot"         reduce using rule 34
	"endfor"       reduce using rule 34
	"step"         reduce using rule 34
	"push_back"    reduce using rule 34
	identificador  reduce using rule 34
	%eof           reduce using rule 34


State 153

	EM -> EM . '+' EM                                   (rule 19)
	EM -> EM . '-' EM                                   (rule 20)
	EM -> EM . '*' EM                                   (rule 21)
	EM -> EM . '/' EM                                   (rule 22)
	EM -> EM . '^' EM                                   (rule 23)
	EM -> "if" '(' COND ',' EM ',' EM . ')'             (rule 35)

	'+'            shift, and enter state 39
	'-'            shift, and enter state 40
	'*'            shift, and enter state 41
	'/'            shift, and enter state 42
	'^'            shift, and enter state 43
	')'            shift, and enter state 161


State 154

	COND -> '[' COND "for" identificador "in" . COND ']'    (rule 57)

	'-'            shift, and enter state 63
	int            shift, and enter state 64
	real           shift, and enter state 65
	funcion        shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	"range"        shift, and enter state 69
	"if"           shift, and enter state 70
	"NOT"          shift, and enter state 71
	identificador  shift, and enter state 72

	COND           goto state 160

State 155

	COND -> COND . '+' COND                             (rule 42)
	COND -> COND . '-' COND                             (rule 43)
	COND -> COND . '*' COND                             (rule 44)
	COND -> COND . '/' COND                             (rule 45)
	COND -> COND . '^' COND                             (rule 46)
	COND -> "range" '(' COND ',' COND . ')'             (rule 56)
	COND -> COND . "AND" COND                           (rule 59)
	COND -> COND . "OR" COND                            (rule 60)
	COND -> COND . '>' COND                             (rule 62)
	COND -> COND . '<' COND                             (rule 63)
	COND -> COND . "<=" COND                            (rule 64)
	COND -> COND . ">=" COND                            (rule 65)
	COND -> COND . "==" COND                            (rule 66)

	'+'            shift, and enter state 88
	'-'            shift, and enter state 89
	'*'            shift, and enter state 90
	'/'            shift, and enter state 91
	'^'            shift, and enter state 92
	')'            shift, and enter state 159
	"AND"          shift, and enter state 94
	"OR"           shift, and enter state 95
	'<'            shift, and enter state 96
	'>'            shift, and enter state 97
	">="           shift, and enter state 98
	"<="           shift, and enter state 99
	"=="           shift, and enter state 100


State 156

	COND -> COND . '+' COND                             (rule 42)
	COND -> COND . '-' COND                             (rule 43)
	COND -> COND . '*' COND                             (rule 44)
	COND -> COND . '/' COND                             (rule 45)
	COND -> COND . '^' COND                             (rule 46)
	COND -> "if" '(' COND ',' COND . ',' COND ')'       (rule 58)
	COND -> COND . "AND" COND                           (rule 59)
	COND -> COND . "OR" COND                            (rule 60)
	COND -> COND . '>' COND                             (rule 62)
	COND -> COND . '<' COND                             (rule 63)
	COND -> COND . "<=" COND                            (rule 64)
	COND -> COND . ">=" COND                            (rule 65)
	COND -> COND . "==" COND                            (rule 66)

	'+'            shift, and enter state 88
	'-'            shift, and enter state 89
	'*'            shift, and enter state 90
	'/'            shift, and enter state 91
	'^'            shift, and enter state 92
	','            shift, and enter state 158
	"AND"          shift, and enter state 94
	"OR"           shift, and enter state 95
	'<'            shift, and enter state 96
	'>'            shift, and enter state 97
	">="           shift, and enter state 98
	"<="           shift, and enter state 99
	"=="           shift, and enter state 100


State 157

	CICLO -> "for" identificador "in" EM "step" EM SECUENCIA_1 "endfor" .    (rule 18)

	"for"          reduce using rule 18
	"plot"         reduce using rule 18
	"endfor"       reduce using rule 18
	"push_back"    reduce using rule 18
	identificador  reduce using rule 18
	%eof           reduce using rule 18


State 158

	COND -> "if" '(' COND ',' COND ',' . COND ')'       (rule 58)

	'-'            shift, and enter state 63
	int            shift, and enter state 64
	real           shift, and enter state 65
	funcion        shift, and enter state 66
	'('            shift, and enter state 67
	'['            shift, and enter state 68
	"range"        shift, and enter state 69
	"if"           shift, and enter state 70
	"NOT"          shift, and enter state 71
	identificador  shift, and enter state 72

	COND           goto state 164

State 159

	COND -> "range" '(' COND ',' COND ')' .             (rule 56)

	'+'            reduce using rule 56
	'-'            reduce using rule 56
	'*'            reduce using rule 56
	'/'            reduce using rule 56
	'^'            reduce using rule 56
	')'            reduce using rule 56
	']'            reduce using rule 56
	','            reduce using rule 56
	"for"          reduce using rule 56
	"AND"          reduce using rule 56
	"OR"           reduce using rule 56
	'<'            reduce using rule 56
	'>'            reduce using rule 56
	">="           reduce using rule 56
	"<="           reduce using rule 56
	"=="           reduce using rule 56


State 160

	COND -> COND . '+' COND                             (rule 42)
	COND -> COND . '-' COND                             (rule 43)
	COND -> COND . '*' COND                             (rule 44)
	COND -> COND . '/' COND                             (rule 45)
	COND -> COND . '^' COND                             (rule 46)
	COND -> '[' COND "for" identificador "in" COND . ']'    (rule 57)
	COND -> COND . "AND" COND                           (rule 59)
	COND -> COND . "OR" COND                            (rule 60)
	COND -> COND . '>' COND                             (rule 62)
	COND -> COND . '<' COND                             (rule 63)
	COND -> COND . "<=" COND                            (rule 64)
	COND -> COND . ">=" COND                            (rule 65)
	COND -> COND . "==" COND                            (rule 66)

	'+'            shift, and enter state 88
	'-'            shift, and enter state 89
	'*'            shift, and enter state 90
	'/'            shift, and enter state 91
	'^'            shift, and enter state 92
	']'            shift, and enter state 163
	"AND"          shift, and enter state 94
	"OR"           shift, and enter state 95
	'<'            shift, and enter state 96
	'>'            shift, and enter state 97
	">="           shift, and enter state 98
	"<="           shift, and enter state 99
	"=="           shift, and enter state 100


State 161

	EM -> "if" '(' COND ',' EM ',' EM ')' .             (rule 35)

	'+'            reduce using rule 35
	'-'            reduce using rule 35
	'*'            reduce using rule 35
	'/'            reduce using rule 35
	'^'            reduce using rule 35
	')'            reduce using rule 35
	']'            reduce using rule 35
	','            reduce using rule 35
	"for"          reduce using rule 35
	';'            reduce using rule 35
	"with"         reduce using rule 35
	"plot"         reduce using rule 35
	"endfor"       reduce using rule 35
	"step"         reduce using rule 35
	"push_back"    reduce using rule 35
	identificador  reduce using rule 35
	%eof           reduce using rule 35


State 162

	SECUENCIA_ESTILO -> SECUENCIA_ESTILO ',' estilo .    (rule 41)

	']'            reduce using rule 41
	','            reduce using rule 41


State 163

	COND -> '[' COND "for" identificador "in" COND ']' .    (rule 57)

	'+'            reduce using rule 57
	'-'            reduce using rule 57
	'*'            reduce using rule 57
	'/'            reduce using rule 57
	'^'            reduce using rule 57
	')'            reduce using rule 57
	']'            reduce using rule 57
	','            reduce using rule 57
	"for"          reduce using rule 57
	"AND"          reduce using rule 57
	"OR"           reduce using rule 57
	'<'            reduce using rule 57
	'>'            reduce using rule 57
	">="           reduce using rule 57
	"<="           reduce using rule 57
	"=="           reduce using rule 57


State 164

	COND -> COND . '+' COND                             (rule 42)
	COND -> COND . '-' COND                             (rule 43)
	COND -> COND . '*' COND                             (rule 44)
	COND -> COND . '/' COND                             (rule 45)
	COND -> COND . '^' COND                             (rule 46)
	COND -> "if" '(' COND ',' COND ',' COND . ')'       (rule 58)
	COND -> COND . "AND" COND                           (rule 59)
	COND -> COND . "OR" COND                            (rule 60)
	COND -> COND . '>' COND                             (rule 62)
	COND -> COND . '<' COND                             (rule 63)
	COND -> COND . "<=" COND                            (rule 64)
	COND -> COND . ">=" COND                            (rule 65)
	COND -> COND . "==" COND                            (rule 66)

	'+'            shift, and enter state 88
	'-'            shift, and enter state 89
	'*'            shift, and enter state 90
	'/'            shift, and enter state 91
	'^'            shift, and enter state 92
	')'            shift, and enter state 165
	"AND"          shift, and enter state 94
	"OR"           shift, and enter state 95
	'<'            shift, and enter state 96
	'>'            shift, and enter state 97
	">="           shift, and enter state 98
	"<="           shift, and enter state 99
	"=="           shift, and enter state 100


State 165

	COND -> "if" '(' COND ',' COND ',' COND ')' .       (rule 58)

	'+'            reduce using rule 58
	'-'            reduce using rule 58
	'*'            reduce using rule 58
	'/'            reduce using rule 58
	'^'            reduce using rule 58
	')'            reduce using rule 58
	']'            reduce using rule 58
	','            reduce using rule 58
	"for"          reduce using rule 58
	"AND"          reduce using rule 58
	"OR"           reduce using rule 58
	'<'            reduce using rule 58
	'>'            reduce using rule 58
	">="           reduce using rule 58
	"<="           reduce using rule 58
	"=="           reduce using rule 58


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 67
Number of terminals: 34
Number of non-terminals: 11
Number of states: 166
